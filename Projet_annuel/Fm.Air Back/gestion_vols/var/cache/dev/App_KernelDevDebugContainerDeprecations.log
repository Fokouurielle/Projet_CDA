a:62:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::load()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:92:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Bundle\Bundle.php";s:4:"line";i:143;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddParamConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:350:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\OptimizerPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:371:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\Compiler\AddExpressionLanguageProvidersPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:61:"Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:345:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\DataProviderPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:339:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\FilterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:352:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\ElasticsearchClientPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:16384;s:7:"message";s:344:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\GraphQlTypePass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:16384;s:7:"message";s:353:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\GraphQlQueryResolverPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:16384;s:7:"message";s:356:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\GraphQlMutationResolverPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:16384;s:7:"message";s:358:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\DeprecateMercurePublisherPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:16384;s:7:"message";s:359:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\MetadataAwareNameConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\TestClientPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:360:"Method "Symfony\Component\DependencyInjection\Compiler\CompilerPassInterface::process()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Symfony\Bundle\DependencyInjection\Compiler\DeprecateLegacyIriConverterPass" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:85:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\http-kernel\Kernel.php";s:4:"line";i:630;s:8:"function";s:5:"build";s:5:"class";s:44:"ApiPlatform\Symfony\Bundle\ApiPlatformBundle";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:259:"Method "Doctrine\DBAL\Types\Type::getSQLDeclaration()" might add "string" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumRoleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:16384;s:7:"message";s:258:"Method "Doctrine\DBAL\Types\Type::convertToPHPValue()" might add "mixed" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumRoleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:16;a:6:{s:4:"type";i:16384;s:7:"message";s:263:"Method "Doctrine\DBAL\Types\Type::convertToDatabaseValue()" might add "mixed" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumRoleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:16384;s:7:"message";s:263:"Method "Doctrine\DBAL\Types\Type::canRequireSQLConversion()" might add "bool" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumRoleType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:18;a:6:{s:4:"type";i:16384;s:7:"message";s:261:"Method "Doctrine\DBAL\Types\Type::getSQLDeclaration()" might add "string" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:260:"Method "Doctrine\DBAL\Types\Type::convertToPHPValue()" might add "mixed" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:20;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Method "Doctrine\DBAL\Types\Type::convertToDatabaseValue()" might add "mixed" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:21;a:6:{s:4:"type";i:16384;s:7:"message";s:265:"Method "Doctrine\DBAL\Types\Type::canRequireSQLConversion()" might add "bool" as a native return type declaration in the future. Do the same in child class "App\DBAL\EnumStatusType" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:16384;s:7:"message";s:167:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Component\Yaml\Command\LintCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:122:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:270;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:16384;s:7:"message";s:174:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Component\Yaml\Command\LintCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:122:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:270;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:16384;s:7:"message";s:61:"Please install the "intl" PHP extension for best performance.";s:4:"file";s:122:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:315;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:128:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:25;a:6:{s:4:"type";i:16384;s:7:"message";s:267:"Since symfony/framework-bundle 5.3: Not setting the "framework.session.storage_factory_id" configuration option is deprecated, it will default to "session.storage.factory.native" and will replace the "framework.session.storage_id" configuration option in version 6.0.";s:4:"file";s:122:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:1144;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:122:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\framework-bundle\DependencyInjection\FrameworkExtension.php";s:4:"line";i:432;s:8:"function";s:28:"registerSessionConfiguration";s:5:"class";s:69:"Symfony\Bundle\FrameworkBundle\DependencyInjection\FrameworkExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:26;a:6:{s:4:"type";i:16384;s:7:"message";s:126:"Since symfony/security-bundle 5.3: The child node "encoders" at path "security" is deprecated, use "password_hashers" instead.";s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\MainConfiguration.php";s:4:"line";i:73;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:104:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Definition\Builder\ExprBuilder.php";s:4:"line";i:246;s:8:"function";s:59:"Symfony\Bundle\SecurityBundle\DependencyInjection\{closure}";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\MainConfiguration";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:27;a:6:{s:4:"type";i:16384;s:7:"message";s:127:"Since symfony/security-bundle 5.3: Not setting the "security.enable_authenticator_manager" config option to true is deprecated.";s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:120;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:128:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\dependency-injection\Compiler\MergeExtensionConfigurationPass.php";s:4:"line";i:76;s:8:"function";s:4:"load";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:28;a:6:{s:4:"type";i:16384;s:7:"message";s:273:"Method "Symfony\Component\Security\Core\User\UserInterface::getRoles()" might add "array" as a native return type declaration in the future. Do the same in implementation "App\Entity\Admin" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:29;a:6:{s:4:"type";i:16384;s:7:"message";s:283:"Method "Symfony\Component\Security\Core\User\UserInterface::getUserIdentifier()" might add "string" as a native return type declaration in the future. Do the same in implementation "App\Entity\Admin" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:30;a:6:{s:4:"type";i:16384;s:7:"message";s:274:"Method "Symfony\Component\Security\Core\User\UserInterface::getSalt()" might add "?string" as a native return type declaration in the future. Do the same in implementation "App\Entity\Admin" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:720;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:31;a:6:{s:4:"type";i:16384;s:7:"message";s:233:"Since symfony/security-bundle 5.3: Configuring an encoder for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "App\Entity\Admin" should implement it.";s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:721;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:189;s:8:"function";s:14:"createEncoders";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:32;a:6:{s:4:"type";i:16384;s:7:"message";s:240:"Since symfony/security-bundle 5.3: Configuring a password hasher for a user class that does not implement "Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface" is deprecated, class "App\Entity\Admin" should implement it.";s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:836;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:120:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-bundle\DependencyInjection\SecurityExtension.php";s:4:"line";i:193;s:8:"function";s:13:"createHashers";s:5:"class";s:67:"Symfony\Bundle\SecurityBundle\DependencyInjection\SecurityExtension";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:33;a:6:{s:4:"type";i:16384;s:7:"message";s:172:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Bridge\Monolog\Command\ServerLogCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:114:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\debug-bundle\DependencyInjection\DebugExtension.php";s:4:"line";i:96;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:34;a:6:{s:4:"type";i:16384;s:7:"message";s:179:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Bridge\Monolog\Command\ServerLogCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:114:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\debug-bundle\DependencyInjection\DebugExtension.php";s:4:"line";i:96;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:35;a:6:{s:4:"type";i:16384;s:7:"message";s:179:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php";s:4:"line";i:35;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:36;a:6:{s:4:"type";i:16384;s:7:"message";s:169:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\NotBlank".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php";s:4:"line";i:35;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:37;a:6:{s:4:"type";i:16384;s:7:"message";s:168:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\NotNull".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php";s:4:"line";i:35;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:38;a:6:{s:4:"type";i:16384;s:7:"message";s:166:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\Regex".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php";s:4:"line";i:35;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:39;a:6:{s:4:"type";i:16384;s:7:"message";s:167:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\Choice".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php";s:4:"line";i:35;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:40;a:6:{s:4:"type";i:16384;s:7:"message";s:167:"The "Symfony\Component\Validator\Constraint::$errorNames" property is considered final. You should not override it in "Symfony\Component\Validator\Constraints\Length".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:130:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php";s:4:"line";i:35;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:41;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Bundle\MakerBundle\Maker\AbstractMaker::interact()" might add "void" as a native return type declaration in the future. Do the same in child class "ApiPlatform\Core\Bridge\Symfony\Maker\MakeDataProvider" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:144:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\maker-bundle\src\DependencyInjection\CompilerPass\MakeCommandRegistrationPass.php";s:4:"line";i:37;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:42;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Bundle\MakerBundle\Maker\AbstractMaker::interact()" might add "void" as a native return type declaration in the future. Do the same in child class "ApiPlatform\Core\Bridge\Symfony\Maker\MakeDataPersister" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:144:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\maker-bundle\src\DependencyInjection\CompilerPass\MakeCommandRegistrationPass.php";s:4:"line";i:37;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:43;a:6:{s:4:"type";i:16384;s:7:"message";s:215:"Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" interface is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead.";s:4:"file";s:117:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";s:4:"line";i:17;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:117:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-core\Encoder\UserPasswordEncoderInterface.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:44;a:6:{s:4:"type";i:16384;s:7:"message";s:255:"Since symfony/dependency-injection 6.3: Relying on the "@required" annotation on method "Symfony\Bundle\FrameworkBundle\Controller\AbstractController::setContainer()" is deprecated, use the "Symfony\Contracts\Service\Attribute\Required" attribute instead.";s:4:"file";s:124:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\dependency-injection\Compiler\AutowireRequiredMethodsPass.php";s:4:"line";i:60;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:118:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\dependency-injection\Compiler\AbstractRecursivePass.php";s:4:"line";i:86;s:8:"function";s:12:"processValue";s:5:"class";s:74:"Symfony\Component\DependencyInjection\Compiler\AutowireRequiredMethodsPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:45;a:6:{s:4:"type";i:16384;s:7:"message";s:174:"Since symfony/security-http 5.3: The "Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" class is deprecated, use the new authenticator system instead.";s:4:"file";s:121:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-http\Firewall\AnonymousAuthenticationListener.php";s:4:"line";i:22;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:121:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\security-http\Firewall\AnonymousAuthenticationListener.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:46;a:6:{s:4:"type";i:16384;s:7:"message";s:281:"Since symfony/security-bundle 5.3: The "Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" service is deprecated, use "Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface" instead. It is being referenced by the ".service_locator.PdzOpjL" service.";s:4:"file";s:127:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:65;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:127:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\dependency-injection\Compiler\ResolveReferencesToAliasesPass.php";s:4:"line";i:48;s:8:"function";s:15:"getDefinitionId";s:5:"class";s:77:"Symfony\Component\DependencyInjection\Compiler\ResolveReferencesToAliasesPass";s:4:"type";s:2:"->";}}s:5:"count";i:1;}i:47;a:6:{s:4:"type";i:16384;s:7:"message";s:185:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:113:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\framework-bundle\Command\AbstractConfigCommand.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:48;a:6:{s:4:"type";i:16384;s:7:"message";s:192:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:4:{s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:296;s:4:"args";a:1:{i:0;s:113:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\framework-bundle\Command\AbstractConfigCommand.php";}s:8:"function";s:7:"include";}}s:5:"count";i:1;}i:49;a:6:{s:4:"type";i:16384;s:7:"message";s:173:"The "Symfony\Component\Console\Command\Command::$defaultName" property is considered final. You should not override it in "Symfony\Component\Validator\Command\DebugCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:50;a:6:{s:4:"type";i:16384;s:7:"message";s:180:"The "Symfony\Component\Console\Command\Command::$defaultDescription" property is considered final. You should not override it in "Symfony\Component\Validator\Command\DebugCommand".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:51;a:6:{s:4:"type";i:16384;s:7:"message";s:234:"The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" class implements "Symfony\Component\Security\Guard\AuthenticatorInterface" that is deprecated since Symfony 5.3, use the new authenticator system instead.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:52;a:6:{s:4:"type";i:16384;s:7:"message";s:334:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:53;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getUser()" might add "?UserInterface" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:54;a:6:{s:4:"type";i:16384;s:7:"message";s:354:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationFailure()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:55;a:6:{s:4:"type";i:16384;s:7:"message";s:354:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationSuccess()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:56;a:6:{s:4:"type";i:16384;s:7:"message";s:342:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::checkCredentials()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:57;a:6:{s:4:"type";i:16384;s:7:"message";s:365:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::createAuthenticatedToken()" might add "GuardTokenInterface" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:58;a:6:{s:4:"type";i:16384;s:7:"message";s:344:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supportsRememberMe()" might add "bool" as a native return type declaration in the future. Do the same in implementation "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:59;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\HttpKernel\DataCollector\DataCollectorInterface::collect()" might add "void" as a native return type declaration in the future. Do the same in implementation "ApiPlatform\Core\Bridge\Symfony\Bundle\DataCollector\RequestDataCollector" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\error-handler\DebugClassLoader.php";s:4:"line";i:337;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:105:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\config\Resource\ClassExistenceResource.php";s:4:"line";i:76;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:60;a:6:{s:4:"type";i:16384;s:7:"message";s:149:"Since api-platform/core 2.7: The service "ApiPlatform\Core\Api\IdentifiersExtractor" is deprecated, use ApiPlatform\Api\IdentifiersExtractor instead.";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:110:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\api-platform\core\src\Core\Api\IdentifiersExtractor.php";s:4:"line";i:49;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}i:61;a:6:{s:4:"type";i:16384;s:7:"message";s:205:"Since api-platform/core 2.7: Use "ApiPlatform\Metadata\Resource\Factory\ResourceMetadataCollectionFactoryInterface" instead of "ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface".";s:4:"file";s:97:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\symfony\deprecation-contracts\function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:106:"C:\wamp64\www\Reservation-Voyage-Backend-master\vendor\api-platform\core\src\Symfony\Routing\ApiLoader.php";s:4:"line";i:74;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:1;}}